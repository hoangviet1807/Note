{"ast":null,"code":"var _jsxFileName = \"/home/bnhviet/Documents/materialdemo/src/pages/NoteData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { fetchNote } from \"../api/index\";\nimport { Grid, Paper, Container, makeStyles } from \"@material-ui/core\";\nimport NoteCard from \"../components/NoteCard\";\nimport { baseURL, removeBook } from \"../api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NoteData(props) {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"note\", () => fetchNote());\n  const {\n    mutateAsync,\n    Loading\n  } = useMutation(removeBook);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Fetch Error...\";\n  console.log(baseURL);\n\n  const handleDelete = () => {\n    removeBook;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: Loading ? \"Remove\" : /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 34\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteData, \"ppdREdQULX3g9AccK1Ur8Z958Tg=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = NoteData;\nexport default NoteData;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteData\");","map":{"version":3,"sources":["/home/bnhviet/Documents/materialdemo/src/pages/NoteData.js"],"names":["React","useEffect","useState","PropTypes","useMutation","useQuery","fetchNote","Grid","Paper","Container","makeStyles","NoteCard","baseURL","removeBook","NoteData","props","isLoading","error","data","mutateAsync","Loading","console","log","handleDelete","map","note","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,cAApC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6Bb,QAAQ,CAAC,MAAD,EAAS,MAAMC,SAAS,EAAxB,CAA3C;AACA,QAAM;AAACa,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAyBhB,WAAW,CAACS,UAAD,CAA1C;AACA,MAAIG,SAAJ,EAAe,OAAO,YAAP;AACf,MAAIC,KAAJ,EAAW,OAAO,gBAAP;AACXI,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;;AACE,QAAMW,YAAY,GAAG,MAAK;AACxBV,IAAAA,UAAU;AACX,GAFD;;AAIF,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGK,IAAI,CAACM,GAAL,CAASC,IAAI,iBACZ,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,kBACGL,OAAO,GAAG,QAAH,gBAAa,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEK,IAAhB;AAAsB,UAAA,YAAY,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA;AADvB,SAAsCE,IAAI,CAACC,EAA3C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArBQZ,Q;UAC4BT,Q,EACJD,W;;;KAFxBU,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { fetchNote } from \"../api/index\";\nimport { Grid, Paper, Container, makeStyles } from \"@material-ui/core\";\nimport NoteCard from \"../components/NoteCard\";\nimport { baseURL, removeBook } from \"../api/index\";\n\nfunction NoteData(props) {\n  const { isLoading, error, data } = useQuery(\"note\", () => fetchNote());\n  const {mutateAsync, Loading} = useMutation(removeBook)\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Fetch Error...\";   \n  console.log(baseURL)\n    const handleDelete = () =>{\n      removeBook\n    }\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {data.map(note => (\n          <Grid item xs={12} md={6} lg={4} key={note.id}>\n            {Loading ? \"Remove\": <NoteCard note={note} handleDelete={handleDelete} />}\n          </Grid>\n        ))}\n      </Grid>\n      </Container>\n  );\n}\n\nexport default NoteData;\n"]},"metadata":{},"sourceType":"module"}