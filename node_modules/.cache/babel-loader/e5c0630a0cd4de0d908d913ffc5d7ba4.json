{"ast":null,"code":"var _jsxFileName = \"/home/bnhviet/Documents/materialdemo/src/pages/NoteData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-query\";\nimport { fetchNote } from \"../api/index\";\nimport { Grid, Paper, Container } from \"@material-ui/core\";\nimport NoteCard from \"../components/NoteCard\";\nimport { baseURL } from \"../api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NoteData(props) {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"note\", () => fetchNote());\n  const {\n    note,\n    setNote\n  } = useState([]);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Fetch Error...\";\n\n  const handleDelete = async id => {\n    await fetch(baseURL + id, {\n      method: 'DELETE'\n    });\n    const newNotes = data.filter(note => note.id != id);\n    setNote(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteData, \"mnRMirATOUjNnmsPfuJKS16dZ6o=\", false, function () {\n  return [useQuery];\n});\n\n_c = NoteData;\nexport default NoteData;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteData\");","map":{"version":3,"sources":["/home/bnhviet/Documents/materialdemo/src/pages/NoteData.js"],"names":["React","useEffect","useState","PropTypes","useQuery","fetchNote","Grid","Paper","Container","NoteCard","baseURL","NoteData","props","isLoading","error","data","note","setNote","handleDelete","id","fetch","method","newNotes","filter","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BX,QAAQ,CAAC,MAAD,EAAS,MAAMC,SAAS,EAAxB,CAA3C;AACA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIW,SAAJ,EAAe,OAAO,YAAP;AACf,MAAIC,KAAJ,EAAW,OAAO,gBAAP;;AAET,QAAMI,YAAY,GAAG,MAAOC,EAAP,IAAa;AAC9B,UAAMC,KAAK,CAACV,OAAO,GAAGS,EAAX,EAAe;AACtBE,MAAAA,MAAM,EAAE;AADc,KAAf,CAAX;AAGA,UAAMC,QAAQ,GAAGP,IAAI,CAACQ,MAAL,CAAYP,IAAI,IAAIA,IAAI,CAACG,EAAL,IAAWA,EAA/B,CAAjB;AACAF,IAAAA,OAAO,CAACK,QAAD,CAAP;AAEH,GAPD;;AASF,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGP,IAAI,CAACS,GAAL,CAAUR,IAAD,iBACR,QAAC,IAAD;AAAoB,QAAA,EAAE,EAAE,EAAxB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,YAAY,EAAIE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,SAAWF,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1BQR,Q;UAC4BP,Q;;;KAD5BO,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-query\";\nimport { fetchNote } from \"../api/index\";\nimport { Grid, Paper, Container } from \"@material-ui/core\";\nimport NoteCard from \"../components/NoteCard\";\nimport { baseURL } from \"../api/index\";\nfunction NoteData(props) {\n  const { isLoading, error, data } = useQuery(\"note\", () => fetchNote());\n  const {note, setNote} = useState([])\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Fetch Error...\";   \n\n    const handleDelete = async (id) =>{\n        await fetch(baseURL + id, {\n            method: 'DELETE'\n        })\n        const newNotes = data.filter(note => note.id != id)\n        setNote(newNotes)\n\n    }\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {data.map((note) => (\n          <Grid key={note.id} xs={12} md={6} lg={4}>\n            <NoteCard note={note} handleDelete = {handleDelete} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default NoteData;\n"]},"metadata":{},"sourceType":"module"}